// <auto-generated />
using System;
using DJZeus_Backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DJZeus_Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250811124523_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DJZeus_Backend.Models.RecommendationLog", b =>
                {
                    b.Property<int>("RecommendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RecommendId"));

                    b.Property<DateTime>("RecommendedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SongTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VideoId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Weather")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RecommendId");

                    b.HasIndex("UserId");

                    b.ToTable("RecommendationLogs");
                });

            modelBuilder.Entity("DJZeus_Backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DJZeus_Backend.Models.RecommendationLog", b =>
                {
                    b.HasOne("DJZeus_Backend.Models.User", "User")
                        .WithMany("RecommendationLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DJZeus_Backend.Models.User", b =>
                {
                    b.Navigation("RecommendationLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
